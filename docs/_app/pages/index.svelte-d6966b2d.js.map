{"version":3,"file":"index.svelte-d6966b2d.js","sources":["../../../../../src/lib/_helpers/connectable.js","../../../../../src/lib/_helpers/components/Link.svelte","../../../../../src/lib/PanHandle.svelte","../../../../../src/lib/Resizable.svelte","../../../../../src/lib/Connectable.svelte","../../../../../src/lib/Links.svelte","../../../../../src/lib/_helpers/components/Object.svelte","../../../../../src/routes/index.svelte"],"sourcesContent":["// heavily inspired by svelte-dnd-action\r\n// https://github.com/isaacHagoel/svelte-dnd-action/blob/master/src/pointerAction.js\r\n\r\nimport { styleActiveDropZones, styleInactiveDropZones } from './styler';\r\n\r\nconst MIN_MOVEMENT_BEFORE_DRAG_START_PX = 3;\r\nconst DEFAULT_DROP_TARGET_STYLE = {\r\n\toutline: 'rgba(255, 255, 102, 0.7) solid 2px'\r\n};\r\n\r\nlet currentMousePosition;\r\nlet dragStartMousePosition;\r\nlet originalDragTarget;\r\nlet isWorkingOnPreviousDrag = false;\r\nlet finalizingPreviousDrag = false;\r\n\r\nlet originDropZone;\r\nconst DEFAULT_DROP_ZONE_TYPE = '--any--';\r\n\r\n// a map from type to a set of drop-zones\r\nconst typeToDropZones = new Map();\r\n\r\nconst printDebug = (generateMessage, logFunction = console.debug) => {\r\n\tconst message = generateMessage();\r\n\tif (Array.isArray(message)) {\r\n\t\tlogFunction(...message);\r\n\t} else {\r\n\t\tlogFunction(message);\r\n\t}\r\n};\r\n\r\n/* drop-zones registration management */\r\nfunction registerDropZone(dropZoneEl, type) {\r\n\tprintDebug(() => 'registering drop-zone if absent');\r\n\tif (!typeToDropZones.has(type)) {\r\n\t\ttypeToDropZones.set(type, new Set());\r\n\t}\r\n\tif (!typeToDropZones.get(type).has(dropZoneEl)) {\r\n\t\ttypeToDropZones.get(type).add(dropZoneEl);\r\n\t\tincrementActiveDropZoneCount();\r\n\t}\r\n}\r\n\r\nfunction unregisterDropZone(dropZoneEl, type) {\r\n\ttypeToDropZones.get(type).delete(dropZoneEl);\r\n\tdecrementActiveDropZoneCount();\r\n\tif (typeToDropZones.get(type).size === 0) {\r\n\t\ttypeToDropZones.delete(type);\r\n\t}\r\n}\r\n\r\nexport function connectable(node, options) {\r\n\tlet initialized = false;\r\n\tconst config = {\r\n\t\titems: undefined,\r\n\t\ttype: undefined,\r\n\t\tflipDurationMs: 0,\r\n\t\tdragDisabled: false,\r\n\t\tmorphDisabled: false,\r\n\t\tdropFromOthersDisabled: false,\r\n\t\tdropTargetStyle: DEFAULT_DROP_TARGET_STYLE,\r\n\t\tdropTargetClasses: [],\r\n\t\ttransformDraggedElement: () => {},\r\n\t\tcentreDraggedOnCursor: false\r\n\t};\r\n\r\n\t/* events fired on the draggable target */\r\n\tnode.addEventListener('mousedown', handleMouseDown);\r\n\tnode.addEventListener('touchstart', handleMouseDown);\r\n\r\n\tfunction handleMouseDown(e) {\r\n\t\t// on safari clicking on a select element doesn't fire mouseup at the end of the click and in general this makes more sense\r\n\t\tif (\r\n\t\t\te.target !== e.currentTarget &&\r\n\t\t\t(e.target.value !== undefined || e.target.isContentEditable)\r\n\t\t) {\r\n\t\t\tprintDebug(() => \"won't initiate drag on a nested input element\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// prevents responding to any button but left click which equals 0 (which is falsy)\r\n\t\tif (e.button) {\r\n\t\t\tprintDebug(() => `ignoring none left click button: ${e.button}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Don't connect while resizing\r\n\t\tif (Array.from(e.target.classList).includes('svlt-grid-resizer')) {\r\n\t\t\tprintDebug(() => `Don't connect while resizing`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\te.stopPropagation();\r\n\t\tconst c = e.touches ? e.touches[0] : e;\r\n\t\tdragStartMousePosition = { x: c.clientX, y: c.clientY };\r\n\t\tcurrentMousePosition = { ...dragStartMousePosition };\r\n\t\toriginalDragTarget = e.currentTarget;\r\n\t\taddMaybeListeners();\r\n\t}\r\n\r\n\tfunction addMaybeListeners() {\r\n\t\twindow.addEventListener('mousemove', handleMouseMoveMaybeDragStart, { passive: false });\r\n\t\twindow.addEventListener('touchmove', handleMouseMoveMaybeDragStart, {\r\n\t\t\tpassive: false,\r\n\t\t\tcapture: false\r\n\t\t});\r\n\t\twindow.addEventListener('mouseup', handleFalseAlarm, { passive: false });\r\n\t\twindow.addEventListener('touchend', handleFalseAlarm, { passive: false });\r\n\t}\r\n\r\n\tfunction removeMaybeListeners() {\r\n\t\twindow.removeEventListener('mousemove', handleMouseMoveMaybeDragStart);\r\n\t\twindow.removeEventListener('touchmove', handleMouseMoveMaybeDragStart);\r\n\t\twindow.removeEventListener('mouseup', handleFalseAlarm);\r\n\t\twindow.removeEventListener('touchend', handleFalseAlarm);\r\n\t}\r\n\r\n\tfunction handleFalseAlarm() {\r\n\t\tremoveMaybeListeners();\r\n\t\toriginalDragTarget = undefined;\r\n\t\tdragStartMousePosition = undefined;\r\n\t\tcurrentMousePosition = undefined;\r\n\t}\r\n\r\n\tfunction handleMouseMoveMaybeDragStart(e) {\r\n\t\te.preventDefault();\r\n\t\tconst c = e.touches ? e.touches[0] : e;\r\n\t\tcurrentMousePosition = { x: c.clientX, y: c.clientY };\r\n\t\tif (\r\n\t\t\tMath.abs(currentMousePosition.x - dragStartMousePosition.x) >=\r\n\t\t\t\tMIN_MOVEMENT_BEFORE_DRAG_START_PX ||\r\n\t\t\tMath.abs(currentMousePosition.y - dragStartMousePosition.y) >=\r\n\t\t\t\tMIN_MOVEMENT_BEFORE_DRAG_START_PX\r\n\t\t) {\r\n\t\t\tremoveMaybeListeners();\r\n\t\t\thandleDragStart();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleDragStart() {\r\n\t\tisWorkingOnPreviousDrag = true;\r\n\r\n\t\t// initialising globals\r\n\t\toriginDropZone = originalDragTarget.parentElement;\r\n\t\t/** @type {ShadowRoot | HTMLDocument} */\r\n\t\tconst rootNode = originDropZone.getRootNode();\r\n\t\tconst originDropZoneRoot = rootNode.body || rootNode;\r\n\r\n\t\t// styleActiveDropZones(\r\n\t\t// \tArray.from(typeToDropZones.get(config.type)).filter(\r\n\t\t// \t\t(dz) => dz === originDropZone || !dzToConfig.get(dz).dropFromOthersDisabled\r\n\t\t// \t),\r\n\t\t// \t(dz) => dzToConfig.get(dz).dropTargetStyle,\r\n\t\t// \t(dz) => dzToConfig.get(dz).dropTargetClasses\r\n\t\t// );\r\n\r\n\t\t// dispatchConsiderEvent(originDropZone, items, {\r\n\t\t// \ttrigger: TRIGGERS.DRAG_STARTED,\r\n\t\t// \tid: draggedElData[ITEM_ID_KEY],\r\n\t\t// \tsource: SOURCES.POINTER\r\n\t\t// });\r\n\r\n\t\t// handing over to global handlers - starting to watch the element\r\n\t\twindow.addEventListener('mousemove', handleMouseMove, { passive: false });\r\n\t\twindow.addEventListener('touchmove', handleMouseMove, { passive: false, capture: false });\r\n\t\twindow.addEventListener('mouseup', handleDrop, { passive: false });\r\n\t\twindow.addEventListener('touchend', handleDrop, { passive: false });\r\n\t}\r\n\r\n\t// Global mouse/touch-events handlers\r\n\tfunction handleMouseMove(e) {\r\n\t\te.preventDefault();\r\n\t\tconst c = e.touches ? e.touches[0] : e;\r\n\t\tcurrentMousePosition = { x: c.clientX, y: c.clientY };\r\n\r\n\t\tnode.dispatchEvent(\r\n\t\t\tnew CustomEvent('connecting', {\r\n\t\t\t\tdetail: { node, ...currentMousePosition }\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tfunction handleDrop(event) {\r\n\t\tconsole.log('dropped ');\r\n\t\tfinalizingPreviousDrag = true;\r\n\t\t// cleanup\r\n\t\twindow.removeEventListener('mousemove', handleMouseMove);\r\n\t\twindow.removeEventListener('touchmove', handleMouseMove);\r\n\t\twindow.removeEventListener('mouseup', handleDrop);\r\n\t\twindow.removeEventListener('touchend', handleDrop);\r\n\r\n\t\t// get drop area element target, the target over which the touch event ended/mouseup\r\n\r\n\t\t// const c = event.touches ? event.touches[0] : event;\r\n\t\tconst lifted = event.changedTouches;\r\n\r\n\t\tlet target = lifted\r\n\t\t\t? document.elementFromPoint(lifted[0].clientX, lifted[0].clientY)\r\n\t\t\t: event.target;\r\n\r\n\t\tnode.dispatchEvent(\r\n\t\t\tnew CustomEvent('connected', {\r\n\t\t\t\tdetail: { target } // passes a non updating copy up\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\treturn {\r\n\t\tdestroy() {}\r\n\t};\r\n}\r\n","<script>\r\n\t/**\r\n\t * Show the mouse pointer temporary link/ projection\r\n\t */\r\n\r\n\timport { onMount } from 'svelte';\r\n\timport { link, curveBumpX } from 'd3-shape';\r\n\r\n\t// mandatory props\r\n\texport let target;\r\n\texport let source;\r\n\r\n\t// optional props, with defaults\r\n\texport let width = 500;\r\n\texport let height = 500;\r\n\texport let strokeColor = 'green';\r\n\texport let strokeWidth = 3;\r\n\texport let arrowColor = 'green';\r\n\texport let startOffset = '60%';\r\n\r\n\tlet container;\r\n\r\n\tconst generateXcurve = link(curveBumpX);\r\n\tlet svg, mounted;\r\n\tlet sourceEl, targetEl;\r\n\tlet x1, x2, y1, y2;\r\n\tonMount(() => {\r\n\t\tmounted = true;\r\n\t});\r\n\t// if x1 < x2, x1 + width\r\n\t$: if (mounted) {\r\n\t\tx1 = Math.floor(source.offsetLeft + source.clientWidth / 2);\r\n\t}\r\n\t$: if (mounted) {\r\n\t\ty1 = Math.floor(source.offsetTop + source.clientHeight / 2);\r\n\t\t// y1 = y1 < y2 ? source.offsetTop + source.clientHeight : source.offsetTop\r\n\t}\r\n\t$: if (mounted) {\r\n\t\tx2 = Math.floor(\r\n\t\t\ttarget.offsetLeft + target.offsetWidth / 2 - container.getBoundingClientRect().x\r\n\t\t);\r\n\t}\r\n\t$: if (mounted && container) {\r\n\t\ty2 = Math.floor(\r\n\t\t\ttarget.offsetTop + target.offsetHeight / 2 - container.getBoundingClientRect().y\r\n\t\t);\r\n\t}\r\n\t$: sourceObj = { source: [x1, y1], target: [x2, y2] };\r\n\t$: d = generateXcurve(sourceObj);\r\n</script>\r\n\r\n<svelte:head\r\n\t><link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Luckiest+Guy\" />\r\n</svelte:head>\r\n\r\n<span class=\"svg-container\" bind:this={container}>\r\n\t<svg bind:this={svg} {width} {height}>\r\n\t\t<defs>\r\n\t\t\t<marker\r\n\t\t\t\tid=\"triangle\"\r\n\t\t\t\tviewBox=\"0 0 10 10\"\r\n\t\t\t\trefX=\"1\"\r\n\t\t\t\trefY=\"5\"\r\n\t\t\t\tmarkerUnits=\"strokeWidth\"\r\n\t\t\t\tmarkerWidth=\"4\"\r\n\t\t\t\tmarkerHeight=\"3\"\r\n\t\t\t\torient=\"auto\"\r\n\t\t\t>\r\n\t\t\t\t<path d=\"M 0 0 L 10 5 L 0 10 z\" fill=\"context-stroke\" />\r\n\t\t\t</marker>\r\n\t\t</defs>\r\n\t\t{#if x1 && y2}\r\n\t\t\t<g stroke=\"red\" stroke-opacity=\"0.9\">\r\n\t\t\t\t<path\r\n\t\t\t\t\t{d}\r\n\t\t\t\t\tid=\"path1\"\r\n\t\t\t\t\tstroke-width={strokeWidth}\r\n\t\t\t\t\tstroke={strokeColor}\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\tmarker-mid=\"url(#triangle)\"\r\n\t\t\t\t\tstyle=\"\"\r\n\t\t\t\t/>\r\n\t\t\t</g>\r\n\t\t{/if}\r\n\t\t<text>\r\n\t\t\t<textPath xlink:href=\"#path1\" startOffset={'20%'}>\r\n\t\t\t\t<tspan fill=\"black\">Curvy Connector</tspan>\r\n\t\t\t</textPath>\r\n\t\t\t<textPath xlink:href=\"#path1\" {startOffset} fill={arrowColor}>➤</textPath>\r\n\t\t</text>\r\n\t</svg>\r\n</span>\r\n\r\n<style>\r\n\t.svg-container {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tz-index: -2;\r\n\t}\r\n\tsvg {\r\n\t\tposition: absolute;\r\n\t\tfloat: left;\r\n\t\tstroke-width: 5;\r\n\t\tborder: 1px dashed blue;\r\n\t\tz-index: -1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\ttext {\r\n\t\tfont-family: arrows;\r\n\t\tfont-size: 1.5em;\r\n\t\tfill: grey;\r\n\t\tdominant-baseline: central;\r\n\t}\r\n\ttspan {\r\n\t\tfont-family: 'Luckiest Guy', cursive;\r\n\t\tfont-size: 0.5em;\r\n\t\t/* font-family: Impact; */\r\n\t\tdominant-baseline: ideographic;\r\n\t}\r\n\t@font-face {\r\n\t\tfont-family: arrows;\r\n\t\t/* src: url(arrows.woff); */\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { createEventDispatcher, onMount } from 'svelte';\r\n\r\n\texport let node;\r\n\texport let mouseMoving = false;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet pannable;\r\n\r\n\tonMount(async () => {\r\n\t\t({ pannable } = await import('./_helpers/pannable'));\r\n\t});\r\n\r\n\tfunction handlePanStart(event) {\r\n\t\tmouseMoving = true;\r\n\t\tdispatch('resimulate', 'resimulate');\r\n\t}\r\n\r\n\tfunction handlePanMove(event) {\r\n\t\tmouseMoving = true;\r\n\r\n\t\tnode.x = node.x + event.detail.dx;\r\n\t\tnode.y = node.y + event.detail.dy;\r\n\t\tnode = node;\r\n\t}\r\n\r\n\tfunction handlePanEnd(event) {\r\n\t\tmouseMoving = false;\r\n\t\tnode = node;\r\n\t\tdispatch('resimulate', 'resimulate');\r\n\t}\r\n</script>\r\n\r\n{#if pannable}\r\n\t<div\r\n\t\tclass=\"dragger\"\r\n\t\tuse:pannable\r\n\t\ton:panmove={handlePanMove}\r\n\t\ton:panend={handlePanEnd}\r\n\t\ton:panstart={handlePanStart}\r\n\t>\r\n\t\t<svg\r\n\t\t\twidth=\"20\"\r\n\t\t\theight=\"20\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\taria-hidden=\"true\"\r\n\t\t\tclass=\"svg-inline--fa fa-arrows-alt fa-w-16\"\r\n\t\t\tdata-icon=\"arrows-alt\"\r\n\t\t\tdata-prefix=\"fas\"\r\n\t\t\tviewBox=\"0 0 512 512\"\r\n\t\t\t><defs /><path\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M352 426l-79 79c-9 9-25 9-34 0l-79-79c-15-15-5-41 17-41h51V284H127v51c0 22-26 32-41 17L7 273c-9-9-9-25 0-34l79-79c15-15 41-5 41 17v51h101V127h-51c-22 0-32-26-17-41l79-79c9-9 25-9 34 0l79 79c15 15 5 41-17 41h-51v101h101v-51c0-22 26-32 41-17l79 79c9 9 9 25 0 34l-79 79c-15 15-41 5-41-17v-51H284v101h51c22 0 32 26 17 41z\"\r\n\t\t\t/></svg\r\n\t\t>\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\t.dragger {\r\n\t\tcursor: grab;\r\n\t\tuser-select: none;\r\n\t\tcolor: rgba(255, 255, 255, 0.69);\r\n\t\ttext-align: center;\r\n\t\tbackground: rgba(0, 0, 0, 0.103);\r\n\t\tmargin-top: 7px;\r\n\t\tmargin-right: 7px;\r\n\t\tpadding: 7px 7px 4px 7px;\r\n\t\tborder-radius: 3px;\r\n\t\tborder: 0px solid #aaa;\r\n\t\tposition: absolute;\r\n\t\ttop: 1px;\r\n\t\tright: 1px;\r\n\t}\r\n</style>\r\n","<script>\r\n\tlet resizableDiv;\r\n\r\n\texport let node;\r\n\texport let resizable = true;\r\n\r\n\t// @ts-ignore\r\n\tlet width = node.width || resizableDiv?.parentNode?.offsetWidth || 100;\r\n\t// @ts-ignore\r\n\tlet height = node.height || resizableDiv?.parentNode?.offsetheight || 100;\r\n\r\n\t$: node.width = newSize.width;\r\n\t$: node.height = newSize.height;\r\n\r\n\tlet newSize = { width, height };\r\n\tlet initSize = { width: 0, height: 0 };\r\n\tlet resizeInitPos = { x: 0, y: 0 };\r\n\r\n\tlet active = false; // resize active or not\r\n\r\n\tconst resizePointerDown = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tconst { pageX, pageY } = e;\r\n\r\n\t\tresizeInitPos = { x: pageX, y: pageY };\r\n\t\tinitSize = { width, height };\r\n\t\tnewSize = { width, height };\r\n\r\n\t\tactive = true;\r\n\r\n\t\twindow.addEventListener('pointermove', resizePointerMove);\r\n\t\twindow.addEventListener('pointerup', resizePointerUp);\r\n\t};\r\n\r\n\tconst resizePointerMove = ({ pageX, pageY }) => {\r\n\t\tnewSize.width = initSize.width + pageX - resizeInitPos.x;\r\n\t\tnewSize.height = initSize.height + pageY - resizeInitPos.y;\r\n\t};\r\n\r\n\tconst resizePointerUp = (e) => {\r\n\t\te.stopPropagation();\r\n\r\n\t\twidth = newSize.width;\r\n\t\theight = newSize.height;\r\n\r\n\t\tactive = false;\r\n\r\n\t\twindow.removeEventListener('pointermove', resizePointerMove);\r\n\t\twindow.removeEventListener('pointerup', resizePointerUp);\r\n\t};\r\n</script>\r\n\r\n<div\r\n\tclass=\"resizable\"\r\n\tbind:this={resizableDiv}\r\n\tstyle=\"width: {active ? newSize.width : width}px; height:{active ? newSize.height : height}px;\"\r\n>\r\n\t<slot />\r\n\t{#if resizable}\r\n\t\t<div class=\"svlt-grid-resizer\" on:pointerdown={resizePointerDown} />\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.resizable {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\t.svlt-grid-resizer {\r\n\t\tuser-select: none;\r\n\t\twidth: 20px;\r\n\t\theight: 20px;\r\n\t\tposition: absolute;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tcursor: se-resize;\r\n\t}\r\n\t.svlt-grid-resizer::after {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tright: 5px;\r\n\t\tbottom: 5px;\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-right: 2px solid rgba(0, 0, 0, 0.4);\r\n\t\tborder-bottom: 2px solid rgba(0, 0, 0, 0.4);\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { connectable } from './_helpers/connectable.js';\r\n\timport Link from './_helpers/components/Link.svelte';\r\n\timport PanHandle from '$lib/PanHandle.svelte';\r\n\timport Resizable from '$lib/Resizable.svelte';\r\n\r\n\texport let node;\r\n\texport let data;\r\n\r\n\t// optional props\r\n\texport let resizable = true;\r\n\texport let panhandle = true;\r\n\r\n\tlet source; // start of the connection\r\n\tlet target; // end of the connection\r\n\r\n\t$: x = node.x;\r\n\t$: y = node.y;\r\n\r\n\tlet prevTarget; // to keep track of connection changes, ie: disconnect\r\n\r\n\tlet connectingNow = false;\r\n\r\n\tfunction handleConnecting(event) {\r\n\t\tconnectingNow = true;\r\n\t\tsource = event.detail.node;\r\n\t\t// if connecting, set the target to the mouse pointer\r\n\t\tif (event.detail?.x !== target?.offsetLeft && event.detail?.y !== target?.offsetTop)\r\n\t\t\ttarget = {\r\n\t\t\t\toffsetLeft: event.detail.x,\r\n\t\t\t\toffsetTop: event.detail.y,\r\n\t\t\t\toffsetWidth: 0,\r\n\t\t\t\toffsetHeight: 0\r\n\t\t\t};\r\n\t}\r\n\r\n\tfunction handleConnected(event) {\r\n\t\tconnectingNow = false;\r\n\r\n\t\tfunction getID(n) {\r\n\t\t\tif (n.id) return n.id;\r\n\t\t\tif (n.parentNode) return getID(n.parentNode);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet id = getID(event.detail.target);\r\n\r\n\t\t// node must have an ID, can't be self\r\n\t\tif (!id || id == node.id) return;\r\n\r\n\t\t// Prevent duplicate links\r\n\t\tif (data.links.find((el) => el.source.id == node.id && el.target.id == id) !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\tdata.links = [\r\n\t\t\t...data.links,\r\n\t\t\t{\r\n\t\t\t\tsource: { id: node.id },\r\n\t\t\t\ttarget: { id }\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n</script>\r\n\r\n<div\r\n\tclass=\"endpoint\"\r\n\tid={node.id}\r\n\tuse:connectable\r\n\ton:connecting={handleConnecting}\r\n\ton:connected={handleConnected}\r\n\tstyle=\"left: {x}px; top: {y}px; width: {node.width}px; height:{node.height}px;\"\r\n>\r\n\t{#if resizable}\r\n\t\t<Resizable bind:node>\r\n\t\t\t{#if panhandle}\r\n\t\t\t\t<PanHandle bind:node />\r\n\t\t\t{/if}\r\n\t\t\t<slot />\r\n\t\t</Resizable>\r\n\t{:else if panhandle}\r\n\t\t<PanHandle bind:node />\r\n\t\t<slot />\r\n\t{/if}\r\n</div>\r\n\r\n<!-- Showing to possible link to-be  -->\r\n{#if connectingNow}\r\n\t<Link {source} {target} />\r\n{/if}\r\n\r\n<style>\r\n\t.endpoint {\r\n\t\tposition: absolute;\r\n\t\tbox-shadow: 0 0 2px black;\r\n\t\ttransition: box-shadow 0.25s ease-in;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.endpoint:hover {\r\n\t\tbox-shadow: 0 0 6px black;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// https://github.com/Rich-Harris/svelte-d3-arc-demo/blob/master/src/Viz.svelte\r\n\t// https://github.com/d3/d3-shape/blob/v3.1.0/README.md#_link\r\n\timport { onMount } from 'svelte';\r\n\timport { link, curveBumpX } from 'd3-shape';\r\n\r\n\texport let data;\r\n\r\n\texport let width = 500;\r\n\texport let height = 500;\r\n\r\n\texport let strokeColor = 'green';\r\n\texport let strokeWidth = 3;\r\n\texport let arrowColor = 'green';\r\n\texport let startOffset = '60%';\r\n\r\n\tconst generateXcurve = link(curveBumpX);\r\n\r\n\tlet mounted;\r\n\r\n\tonMount(() => {\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\tconst showCoords = (link) => `[${link.source.id}] to [${link.target.id}]`;\r\n\r\n\tfunction genPath(link) {\r\n\t\tlet sourceEl = document.getElementById(link.source.id);\r\n\t\tlet targetEl = document.getElementById(link.target.id);\r\n\r\n\t\t// centered\r\n\t\tlet sourceX = sourceEl?.offsetLeft + sourceEl.offsetWidth / 2;\r\n\t\tlet sourceY = sourceEl?.offsetTop + sourceEl.offsetHeight / 2;\r\n\t\tlet targetX = targetEl?.offsetLeft + targetEl.offsetWidth / 2;\r\n\t\tlet targetY = targetEl?.offsetTop + targetEl.offsetHeight / 2;\r\n\r\n\t\tlet d = generateXcurve({\r\n\t\t\tsource: [sourceX, sourceY],\r\n\t\t\ttarget: [targetX, targetY]\r\n\t\t});\r\n\r\n\t\treturn d;\r\n\t}\r\n</script>\r\n\r\n<svelte:head\r\n\t><link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Luckiest+Guy\" />\r\n</svelte:head>\r\n\r\n{#if mounted}\r\n\t<div class=\"svg-container\">\r\n\t\t<svg>\r\n\t\t\t<defs>\r\n\t\t\t\t<marker\r\n\t\t\t\t\tid=\"triangle\"\r\n\t\t\t\t\tviewBox=\"0 0 10 10\"\r\n\t\t\t\t\trefX=\"1\"\r\n\t\t\t\t\trefY=\"5\"\r\n\t\t\t\t\tmarkerUnits=\"strokeWidth\"\r\n\t\t\t\t\tmarkerWidth=\"4\"\r\n\t\t\t\t\tmarkerHeight=\"3\"\r\n\t\t\t\t\torient=\"auto\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<path d=\"M 0 0 L 10 5 L 0 10 z\" fill=\"context-stroke\" />\r\n\t\t\t\t</marker>\r\n\t\t\t</defs>\r\n\t\t\t{#each data.links as link, i}\r\n\t\t\t\t{#if link && mounted}\r\n\t\t\t\t\t<g stroke=\"green\" stroke-opacity=\"0.1\">\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\td={genPath(link)}\r\n\t\t\t\t\t\t\tid=\"link_{i}\"\r\n\t\t\t\t\t\t\tstroke-width={strokeWidth}\r\n\t\t\t\t\t\t\tstroke={strokeColor}\r\n\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\t\tmarker-mid=\"url(#triangle)\"\r\n\t\t\t\t\t\t\tstroke-opacity=\".4\"\r\n\t\t\t\t\t\t\tstyle=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<text>\r\n\t\t\t\t\t\t\t<textPath xlink:href=\"#link_{i}\" startOffset={'40%'}>\r\n\t\t\t\t\t\t\t\t<tspan fill=\"black\">{showCoords(link)}</tspan>\r\n\t\t\t\t\t\t\t</textPath>\r\n\t\t\t\t\t\t\t<textPath xlink:href=\"#link_{i}\" {startOffset} fill={arrowColor}>➤</textPath>\r\n\t\t\t\t\t\t</text>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t{/if}\r\n\t\t\t{/each}\r\n\t\t</svg>\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\t.svg-container {\r\n\t\t/* position: relative;\r\n\t\ttop: 0;\r\n\t\tleft: 0; */\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\tsvg {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tfloat: left;\r\n\t\tstroke-width: 5;\r\n\t\tborder: 1px dashed blue;\r\n\t\tz-index: -1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\ttext {\r\n\t\tfont-family: arrows;\r\n\t\tfont-size: 1.5em;\r\n\t\tfill: grey;\r\n\t\tdominant-baseline: central;\r\n\t}\r\n\r\n\ttspan {\r\n\t\tfont-family: 'Luckiest Guy', cursive;\r\n\t\tfont-size: 0.5em;\r\n\t\t/* font-family: Impact; */\r\n\t\tdominant-baseline: ideographic;\r\n\t}\r\n\r\n\t/* @font-face {\r\n\t\tfont-family: arrows;\r\n\t\tsrc: url(arrows.woff);\r\n\t} */\r\n</style>\r\n","<script>\r\n\texport let val;\r\n</script>\r\n\r\n{#if val}\r\n\t<ul>\r\n\t\t{#each [...Object.entries(val)] as [key, val]}\r\n\t\t\t<li>\r\n\t\t\t\t{#if typeof val === 'object'}\r\n\t\t\t\t\t{key} <svelte:self {key} {val} />\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t{key}\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{val}\r\n\t\t\t\t{/if}\r\n\t\t\t</li>\r\n\t\t{/each}\r\n\t</ul>\r\n{/if}\r\n\r\n<style>\r\n\tul {\r\n\t\tlist-style-type: square;\r\n\t}\r\n</style>\r\n","<script>\n\timport { spring } from 'svelte/motion';\n\timport Connectable from '$lib/Connectable.svelte';\n\n\timport Links from '$lib/Links.svelte';\n\timport Object from '$lib/_helpers/components/Object.svelte';\n\n\tlet nodes = {\n\t\tconnections: []\n\t};\n\n\tlet source;\n\tlet target;\n\n\tlet data = {\n\t\tnodes: [\n\t\t\t{ id: '1', group: 1, connectable: true, x: 90, y: 64, width: 100, height: 100 },\n\t\t\t{ id: '2', group: 2, connectable: false, x: 355, y: 129, width: 100, height: 100 },\n\t\t\t{\n\t\t\t\tid: '3',\n\t\t\t\tgroup: 2,\n\t\t\t\tconnectable: false,\n\t\t\t\tx: 69,\n\t\t\t\ty: 276,\n\t\t\t\twidth: 400,\n\t\t\t\theight: 400,\n\t\t\t\tchildren: [\n\t\t\t\t\t{ id: '4', group: 1, connectable: true, x: 100, y: 100, width: 100, height: 100 },\n\t\t\t\t\t{ id: '5', group: 2, connectable: false, x: 414, y: 190, width: 100, height: 100 }\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tlinks: [{ source: { id: '1' }, target: { id: '2' } }]\n\t};\n</script>\n\n<!-- Troubleshooting data  -->\n\n<div class=\"wrapper\">\n\t{#each data.nodes as node (node.id)}\n\t\t<!-- Connectable Prop Options: resizable={false} panhandle={false}  -->\n\t\t<Connectable bind:data bind:node>\n\t\t\t<div class=\"inner\">\n\t\t\t\t{node.id} Connect from Me <br />\n\t\t\t\t{node.x},{node.y}<br />\n\t\t\t\t{node.width},{node.height}\n\t\t\t</div>\n\t\t</Connectable>\n\t{/each}\n\n\t{#if data.links.length > 0}\n\t\t<Links {data} />\n\t{/if}\n</div>\n<div>\n\t<Object val={data} />\n</div>\n\n<style>\n\t:root {\n\t\t--size: 6em;\n\t}\n\t.wrapper {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t\tleft: 0px;\n\t\tmargin: 0px;\n\t\tborder: dotted 3px black;\n\t\tborder-radius: 4px;\n\t\twidth: auto;\n\t\theight: 800px;\n\t}\n\n\t.inner {\n\t\tbackground-color: #baf3ca;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder-radius: 2px;\n\t\tpadding: 0.5em;\n\t}\n</style>\n"],"names":["create_if_block","curveBumpX","create_if_block_1"],"mappings":"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"}